# For information on valid values for option arch, see these links:
# https://git.ipxe.org/ipxe.git/commitdiff/af9afd0a86aeac1eed28b5028c3de669515fc7fc
# https://git.ipxe.org/ipxe.git/blob/HEAD:/src/include/ipxe/dhcp.h#l275
# https://www.rfc-editor.org/errata_search.php?rfc=4578
#
# I like to use native iPXE drivers (they're faster and more stable), so
# give ipxe.pxe/ipxe.efi to all non-iPXE clients, use undionly.kpxe/snponly.efi
# only if you have unsupported or misbehaving NICs.

allow bootp;
allow booting;
next-server 10.90.0.1; # tftp

# Disable ProxyDHCP, we're in control of the primary DHCP server
option ipxe.no-pxedhcp 1;

# Make sure the iPXE we're loading supports the features we need, if not
# load a full-featured version.  See ipxe-option-space.conf for definitions.
if    exists ipxe.http
  and exists ipxe.menu
  and exists ipxe.nfs           # NB: not enabled in iPXE by default
  and (
        ( exists ipxe.pxe
      and exists ipxe.bzimage
      and exists ipxe.elf
      and exists ipxe.comboot   # NB: not enabled in iPXE by default
      and exists ipxe.iscsi
        ) or (
          exists ipxe.efi
        )
      ) {
	filename "http://yo.lan/boot.ipxe";
} elsif option arch = 00:09 { # EFI BC
} elsif option arch = 00:08 { # EFI Xscale
} elsif option arch = 00:07 {
    filename "ipxe-x64.efi";
    #filename "snponly-x64.efi";
} elsif option arch = 00:06 {
    filename "ipxe-x86.efi";
    #filename "snponly-x86.efi";
} elsif option arch = 00:05 { # Intel Lean Client
} elsif option arch = 00:04 { # Arc x86
} elsif option arch = 00:03 { # DEC Alpha
} elsif option arch = 00:02 { # EFI Itanium
} elsif option arch = 00:01 { # NEC/PC98
} else {
    filename "undionly.kpxe";
	  #filename "intel.pxe";
	  #filename "pxelinux.0";
	  #filename "ipxelinux.0";
}